<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Robot Trader - Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>

<header>
    Dashboard Robot Trader
    <a href="{{ url_for('logout') }}"><button class="logout-btn">Déconnexion</button></a>
</header>

<div class="container">
    {% if is_admin %}
        <div class="card">
            <h2>Bienvenue, Admin {{ admin.username }}</h2>
            <p>Configuration des soldes clients :</p>
            <table>
                <thead>
                    <tr>
                        <th>Nom d'utilisateur</th>
                        <th>Solde (USDT)</th>
                        <th>Nouveau solde</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    {% for user in users %}
                    <tr>
                        <form action="{{ url_for('update_balance') }}" method="POST">
                            <td>{{ user.username }}</td>
                            <td>{{ user.balance }}</td>
                            <td>
                                <input type="hidden" name="username" value="{{ user.username }}">
                                <input type="number" step="0.01" name="new_balance" required>
                            </td>
                            <td><button type="submit">Modifier</button></td>
                        </form>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    {% else %}
        <div class="card">
            <h2>Bienvenue, {{ username }}</h2>
            {% if balance > 0 %}
                <p id="solde">Solde actuel : <strong>{{ balance }} USDT</strong></p>
                <p id="performance" class="positive">Performance : +0.00%</p>
                <canvas id="performanceChart" width="400" height="200"></canvas>
            {% else %}
                <p>Vous devez avoir un solde supérieur à 0 pour commencer à trader.</p>
            {% endif %}
        </div>

        <div class="card crypto-table">
            <h2>Marché des Cryptomonnaies</h2>
            <table>
                <thead>
                    <tr>
                        <th>Crypto</th>
                        <th>Prix</th>
                        <th>Variation 24h</th>
                        <th>Volume</th>
                    </tr>
                </thead>
                <tbody>
                    <tr><td>BTC/USDT</td><td>56,320</td><td class="positive">+2.3%</td><td>$18B</td></tr>
                    <tr><td>ETH/USDT</td><td>3,480</td><td class="negative">-1.2%</td><td>$8.1B</td></tr>
                    <tr><td>PAXG/USDT</td><td>2,340</td><td class="positive">+0.5%</td><td>$240M</td></tr>
                    <tr><td>SOL/USDT</td><td>132</td><td class="positive">+4.1%</td><td>$1.5B</td></tr>
                </tbody>
            </table>
        </div>
    {% endif %}
</div>

{% if not is_admin and balance > 0 %}
<script>
    const labels = [...Array(20)].map((_, i) => `-${19 - i}`);
    const initialBalance = {{ balance }};
    let data = [initialBalance];

    const chart = new Chart(document.getElementById('performanceChart'), {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'Évolution du solde',
                data: data,
                borderColor: '#00cc99',
                backgroundColor: 'rgba(0, 204, 153, 0.2)',
                fill: true,
                tension: 0.3
            }]
        },
        options: {
            animation: false,
            scales: {
                y: { beginAtZero: false }
            }
        }
    });

    function updateChart() {
        let last = data[data.length - 1];
        let variation = last * (Math.random() * 0.01 - 0.005);
        let newVal = +(last + variation).toFixed(2);
        data.push(newVal);
        if (data.length > 20) data.shift();
        chart.data.datasets[0].data = data;
        chart.update();

        const performance = ((newVal - initialBalance) / initialBalance * 100).toFixed(2);
        const perfEl = document.getElementById('performance');
        const soldeEl = document.getElementById('solde');

        soldeEl.innerHTML = `Solde actuel : <strong>${newVal.toFixed(2)} USDT</strong>`;
        perfEl.textContent = `Performance : ${performance > 0 ? '+' : ''}${performance}%`;
        perfEl.className = performance >= 0 ? 'positive' : 'negative';
    }

    setInterval(updateChart, 3000);
</script>
{% endif %}
</body>
</html>
